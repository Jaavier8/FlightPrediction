version: "2.1"

services:
  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    #volumes:
    #  - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

  kafka:
    image: docker.io/bitnami/kafka:3.3
    ports:
      - "9092:9092"
    #volumes:
    #  - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  # To create the topic flight_delay_classification_request
  # This service execute command and exit with code 0
  kafka-init:
    image: docker.io/bitnami/kafka:3.3
    depends_on:
      - kafka
    entrypoint: [ 'bin/sh', '-c' ]
    command: |
      "
      # blocks until kafka is reachable
      sleep 5

      echo -e 'Creating kafka topics'
      kafka-topics.sh --bootstrap-server kafka:9092 --create --if-not-exists --topic flight_delay_classification_request --replication-factor 1 --partitions 1

      echo -e 'Successfully created the following topics:'
      kafka-topics.sh --bootstrap-server kafka:9092 --list
      "

  webapp:
    build: "./webapp"
    ports:
      - "5000:5000"

  mongodb:
    image: "mongo"
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_DATABASE=agile_data_science #Access with mongodb://admin:password@127.0.0.1:27017/agile_data_science
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password

#volumes:
#  zookeeper_data:
#    driver: local
#  kafka_data:
#    driver: local
