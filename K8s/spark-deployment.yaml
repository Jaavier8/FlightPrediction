apiVersion: v1
kind: Service
metadata:
  name: spark-srv
spec:
  selector:
    app: sparkmaster
  ports:
  - protocol: TCP
    name: port1
    port: 8080
    targetPort: 8080
  - protocol: TCP
    name: port2
    port: 7077
    targetPort: 7077
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparkmaster-deployment
  labels:
    app: sparkmaster
spec:
  selector:
    matchLabels:
      app: sparkmaster
  template:
    metadata:
      labels:
        app: sparkmaster
    spec:
      volumes:
      - name: shared-data
        emptyDir: {}
      initContainers:
      - name: content
        image: alpine
        volumeMounts:
        - name: shared-data
          mountPath: /pod-data
        command: ["sh"]
        args: ["-c", "echo Container: $HOSTNAME > /pod-data/index.html"]
      containers:
      - name: sparkmaster
        image: bitnami/spark:3.1.2-debian-10-r130
        ports:
        - containerPort: 8080
        - containerPort: 7077
        env:
        - name: SPARK_MODE
          value: master
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sparkworker-deployment
  labels:
    app: sparkworker
spec:
  replicas: 3
  selector:
    matchLabels:
      app: sparkworker
  template:
    metadata:
      labels:
        app: sparkworker
    spec:
      volumes:
      - name: shared-data
        emptyDir: {}
      initContainers:
      - name: content
        image: alpine
        volumeMounts:
        - name: shared-data
          mountPath: /pod-data
        command: ["sh"]
        args: ["-c", "echo Container: $HOSTNAME > /pod-data/index.html"]
      containers:
      - name: sparkworker
        image: bitnami/spark:3.1.2-debian-10-r130
        ports:
        - containerPort: 8080
        - containerPort: 7077
        env:
        - name: SPARK_MODE
          value: worker
        - name: SPARK_MASTER_URL
          value: spark-srv:7077
        - name: SPARK_WORKER_MEMORY
          value: 1G
        - name: SPARK_WORKER_CORES
          value: '2'
